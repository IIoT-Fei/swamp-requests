{
	"info": {
		"_postman_id": "a12844a1-9669-47be-a248-773e67e97313",
		"name": "swamp-platform",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Orion",
			"item": [
				{
					"name": "Orion Info",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "swamp.fei.edu.br:1026/version",
							"host": [
								"swamp",
								"fei",
								"edu",
								"br"
							],
							"port": "1026",
							"path": [
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "Orion Query Entities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:1026/v2/entities/",
							"host": [
								"localhost"
							],
							"port": "1026",
							"path": [
								"v2",
								"entities",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Orion Create Entity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "b2n_lab",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/rooms ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"IoTLab\",\n  \"type\": \"Room\",\n  \"temperature\": {\n    \"value\": 23,\n    \"type\": \"Float\"\n  },\n  \"pressure\": {\n    \"value\": 720,\n    \"type\": \"Integer\"\n  }\n}"
						},
						"url": {
							"raw": "localhost:1026/v2/entities/",
							"host": [
								"localhost"
							],
							"port": "1026",
							"path": [
								"v2",
								"entities",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Orion create subscription",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"description\": \"Probe111 Subscription\",\n        \"subject\": {\n            \"entities\": [{\n                \"id\": \"urn:ngsi-ld:Probe:Probe111\",\n                \"type\": \"Probe\"\n            }],\n            \"condition\": {\n                \"attrs\": [\"temperature\", \"humidity\"]\n            }\n        },\n        \"notification\": {\n            \"http\": {\n                \"url\": \"http://draco:5050/v2/notify\"\n            },\n            \"attrs\": [\"temperature\", \"humidity\"]\n        },\n        \"throttling\": 1\n    }"
						},
						"url": {
							"raw": "localhost:1026/v2/subscriptions",
							"host": [
								"localhost"
							],
							"port": "1026",
							"path": [
								"v2",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Orion get all subscriptions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:1026/v2/subscriptions/",
							"host": [
								"localhost"
							],
							"port": "1026",
							"path": [
								"v2",
								"subscriptions",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Orion query an entity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{orion}}/v2/entities/urn:ngsi-ld:Probe:Probe111/attrs/location/value",
							"host": [
								"{{orion}}"
							],
							"path": [
								"v2",
								"entities",
								"urn:ngsi-ld:Probe:Probe111",
								"attrs",
								"location",
								"value"
							]
						}
					},
					"response": []
				},
				{
					"name": "Orion query entity option keyvalues",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "fiware-service",
								"value": "iot_lab"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{orion}}/v2/entities/urn:ngsi-ld:Probe:Probe111/attrs/temperature/",
							"host": [
								"{{orion}}"
							],
							"path": [
								"v2",
								"entities",
								"urn:ngsi-ld:Probe:Probe111",
								"attrs",
								"temperature",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET All Entities Registered by Orion",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "iot_lab"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{orion}}/v2/entities",
							"host": [
								"{{orion}}"
							],
							"path": [
								"v2",
								"entities"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Quantum Leap",
			"item": [
				{
					"name": "Quantum Leap get time series data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:8668/v2/entities/urn:ngsi-ld:Probe:Probe111/attrs/humidity",
							"host": [
								"localhost"
							],
							"port": "8668",
							"path": [
								"v2",
								"entities",
								"urn:ngsi-ld:Probe:Probe111",
								"attrs",
								"humidity"
							]
						}
					},
					"response": []
				},
				{
					"name": "Quantum Leap Info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:8668/v2/version",
							"host": [
								"localhost"
							],
							"port": "8668",
							"path": [
								"v2",
								"version"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IoT-Agent JSON",
			"item": [
				{
					"name": "IoT-Agent Device Operations ",
					"item": [
						{
							"name": "IoT-Agent  - Delete a Provisioned Device",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "fiware-service",
										"value": "iot_lab"
									},
									{
										"key": "fiware-servicepath",
										"value": "/"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4041/iot/devices/Probe111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4041",
									"path": [
										"iot",
										"devices",
										"Probe111"
									]
								},
								"description": "This example removes a provisioned device by making a DELETE request to the `/iot/services/<device-id>` endpoint.\n\nThe device attributes will no longer be mapped and commands can no longer be sent to the device.\nIf the device is making active measurements, they will still be handled with default values\nif the associated service has not been deleted."
							},
							"response": []
						},
						{
							"name": "IoT-Agent  - Read Provisioned Device Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "fiware-service",
										"value": "iot_lab"
									},
									{
										"key": "fiware-servicepath",
										"value": "/"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4041/iot/devices/Probe111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4041",
									"path": [
										"iot",
										"devices",
										"Probe111"
									]
								},
								"description": "This example obtains the full details of a provisioned device with a given `<device-id>` path.\n\nThe response includes all the commands and attributes mappings associated with the device\n\nProvisioned Device details can be read by making a GET request to the `/iot/devices/<device-id>` endpoint."
							},
							"response": []
						},
						{
							"name": "IoT-Agent List all Provisioned Devices",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "fiware-service",
										"value": "iot_lab"
									},
									{
										"key": "fiware-servicepath",
										"value": "/"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4041/iot/devices",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4041",
									"path": [
										"iot",
										"devices"
									]
								},
								"description": "This example lists all provisioned devices by making a GET request to the `/iot/devices` endpoint.\n\nThe response includes all the commands and attributes mappings associated with all devices"
							},
							"response": []
						},
						{
							"name": "IoT -Agente create device",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "fiware-service",
										"value": "scp",
										"type": "text"
									},
									{
										"key": "fiware-servicepath",
										"value": "/",
										"type": "text"
									},
									{
										"key": "Cache-Control",
										"value": " no-cache",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"devices\": [\n        {\n            \"device_id\": \"sensor\",\n            \"entity_name\": \"urn:ngsi-ld:Senor:sensor1\",\n            \"entity_type\": \"Sensor\",\n            \"attributes\": [\n                {\t\n                    \"name\": \"temperature\",\n                    \"type\": \"Number\"\n                },{\t\n                    \"name\": \"refPlace\",\n                    \"type\": \"Realationship\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "localhost:4041/iot/devices",
									"host": [
										"localhost"
									],
									"port": "4041",
									"path": [
										"iot",
										"devices"
									]
								}
							},
							"response": []
						},
						{
							"name": "IoT-Agent update device",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "fiware-service",
										"value": "iot_lab"
									},
									{
										"key": "fiware-servicepath",
										"value": "/"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"temperature\": 22,\n\t\"humidity\":  73,\n\t\"location\":{       \n\t\t\"type\": \"Point\",\n        \"coordinates\": [\n          -46.73956274986267,\n          -22.181672723011708\n        ]\n\t}\n}\t"
								},
								"url": {
									"raw": "localhost:7896/iot/json?i=Probe111&k=key123",
									"host": [
										"localhost"
									],
									"port": "7896",
									"path": [
										"iot",
										"json"
									],
									"query": [
										{
											"key": "i",
											"value": "Probe111"
										},
										{
											"key": "k",
											"value": "key123"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "IoT-Agent - Update device parameters ",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "fiware-service",
										"value": "iot_lab",
										"type": "text"
									},
									{
										"key": "fiware-servicepath",
										"value": "/",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"attributes\": [\n        {\n            \"name\": \"location\",\n            \"type\": \"geo:json\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://localhost:4041/iot/devices/Probe111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4041",
									"path": [
										"iot",
										"devices",
										"Probe111"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "IoT-Agent Json info",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4041/iot/about",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4041",
							"path": [
								"iot",
								"about"
							]
						}
					},
					"response": []
				},
				{
					"name": "IoT Agent - Create a Service Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "fiware-service",
								"value": "iot_lab"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"services\": [\n   {\n     \"apikey\":      \"key123\",\n     \"cbroker\":     \"http://orion:1026\",\n     \"entity_type\": \"Probe\",\n     \"resource\":    \"/iot/json\"\n   }\n ]\n}"
						},
						"url": {
							"raw": "http://localhost:4041/iot/services",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4041",
							"path": [
								"iot",
								"services"
							]
						},
						"description": "Invoking group provision is always the the first step in connecting devices since it is always necessary to\nsupply an authentication key with each measurement and the IoT Agent will not initially know which URL \nthe context broker is responding on.\n\nIt is possible to set up default commands and attributes for all devices as well, but this\nis not done within this tutorial as we will be provisioning each device separately.\n\nThis example provisions an anonymous group of devices. It tells the IoT Agent that a series of devices\nwill be sending messages to the `IOTA_HTTP_PORT` (where the IoT Agent is listening for **Northbound** communications)\n\nIn the example the IoT Agent is informed that the `/iot/d` endpoint will be used and that devices will authenticate\nthemselves by including the token `4jggokgpepnvsb2uv4s40d59ov`. For an UltraLight IoT Agent this means devices will\nbe sending GET or POST requests to: \n\n```\nhttp://iot-agent:7896/iot/d?i=<device_id>&k=4jggokgpepnvsb2uv4s40d59ov\n```\n\nWhich should be familiar UltraLight 2.0 syntax from the previous tutorial.\n\nWhen a measurement from an IoT device is received on the resource url it needs to be interpreted and passed\nto the context broker. The `entity_type` attribute provides a default `type` for each device which has made a \nrequest (in this case anonymous devices will be known as `Thing` entities. Furthermore the location of the \ncontext broker is required, so that the IoT Agent can pass on any measurements received to the correct location."
					},
					"response": []
				},
				{
					"name": "IoT-Agent - GET Service Group",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://192.168.1.84:4041/iot/services",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"1",
								"84"
							],
							"port": "4041",
							"path": [
								"iot",
								"services"
							],
							"query": [
								{
									"key": "fiware-service",
									"value": "iot_lab",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "NGSI-LD Wrapper",
			"item": [
				{
					"name": "Exemple Entitites ",
					"item": [
						{
							"name": "NGSI-LD Wrapper Farm Creation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/ld+json"
									},
									{
										"key": "fiware-service",
										"type": "text",
										"value": "iot_lab"
									},
									{
										"key": "fiware-servicepath",
										"type": "text",
										"value": "/"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n      \"id\": \"urn:ngsi-ld:Farm:Farm1\",\n      \"type\": \"Farm\",\n      \"Management_Zone1\":{\n    \t\"type\":\"Relationship\",\n    \t\"object\": \"urn:ngsi-ld:MGMTZone:MGMTZone11\"\n      },\n      \"Management_Zone2\":{\n    \t\"type\":\"Relationship\",\n    \t\"object\": \"urn:ngsi-ld:MGMTZone:MGMTZone12\"\n      },\n      \"Management_Zone3\":{\n    \t\"type\":\"Relationship\",\n    \t\"object\": \"urn:ngsi-ld:MGMTZone:MGMTZone13\"\n      },\n      \"@context\": [\n    \t\"https://fiware.github.io/NGSI-LD_Tests/ldContext/testFullContext.jsonld\"\n      ]\n}"
								},
								"url": {
									"raw": "localhost:1030/ngsi-ld/v1/entities/",
									"host": [
										"localhost"
									],
									"port": "1030",
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "NGSI-LD Wrapper MGMTZone creation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/ld+json",
										"type": "text"
									},
									{
										"key": "fiware-service",
										"value": "iot_lab",
										"type": "text"
									},
									{
										"key": "fiware-servicepath",
										"value": "/",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n      \"id\": \"urn:ngsi-ld:MGMTZone:MGMTZone13\",\n      \"type\": \"MGMTZone\",\n      \"Probe1\":{\n    \t\"type\":\"Relationship\",\n    \t\"object\": \"urn:ngsi-ld:Probe:Probe131\"\n      },\n      \"Probe2\":{\n    \t\"type\":\"Relationship\",\n    \t\"object\": \"urn:ngsi-ld:Probe:Probe132\"\n      },\n      \"Probe3\":{\n    \t\"type\":\"Relationship\",\n    \t\"object\": \"urn:ngsi-ld:Probe:Probe133\"\n      },\n      \"@context\": [\n    \t\"https://fiware.github.io/NGSI-LD_Tests/ldContext/testFullContext.jsonld\"\n      ]\n}"
								},
								"url": {
									"raw": "localhost:1030/ngsi-ld/v1/entities/",
									"host": [
										"localhost"
									],
									"port": "1030",
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "NGSI-LD Wrapper Probe Creation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/ld+json",
										"type": "text"
									},
									{
										"key": "fiware-service",
										"value": "iot_lab",
										"type": "text"
									},
									{
										"key": "fiware-servicepath",
										"value": "/",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n     \"id\": \"urn:ngsi-ld:Probe:Probe141\",\n     \"type\": \"Probe\",\n     \"temperature\":{\n    \t\"type\":\"Property\",\n    \t\"value\": 0.0\n      },\n      \"humidity\":{\n    \t\"type\":\"Property\",\n    \t\"value\": 0.0\n      },\n      \"illumination\":{\n    \t\"type\":\"Property\",\n    \t\"value\": 0.0\n      },\n      \"@context\": [\n    \t\"https://fiware.github.io/NGSI-LD_Tests/ldContext/testFullContext.jsonld\"\n      ]\n}"
								},
								"url": {
									"raw": "localhost:1030/ngsi-ld/v1/entities/",
									"host": [
										"localhost"
									],
									"port": "1030",
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "NGSI-LD Wrapper version",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:1030/version",
							"host": [
								"localhost"
							],
							"port": "1030",
							"path": [
								"version"
							],
							"query": [
								{
									"key": "fiware-service",
									"value": "iot_lab",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "NGSI-LD Wrapper configuration",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:1030/configuration",
							"host": [
								"localhost"
							],
							"port": "1030",
							"path": [
								"configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "NGSI-LD  Wrapper Ferm Creation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/ld+json",
								"type": "text"
							},
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"id\": \"urn:ngsi-ld:Place:IoT_LAB_FEI\",\n      \"type\": \"Place\",\n      \"@context\": [\n    \t\"https://fiware.github.io/NGSI-LD_Tests/ldContext/testFullContext.jsonld\"\n      ]\n}"
						},
						"url": {
							"raw": "localhost:1030/ngsi-ld/v1/entities/",
							"host": [
								"localhost"
							],
							"port": "1030",
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SWAMP Entities ",
			"item": [
				{
					"name": "Water Meter VE",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"urn:ngsi-ld:water_meter:WaterMeter1\",\n  \"type\": \"water_meter\",\n  \"location\":{\n  \t\"type\":\"geo:json\",\n  \t\"value\":{\n  \t\t\"type\":\"Point\",\n  \t\t\"coordinates\":[0,0]\n  \t\t}\n  \t},\n\t\"waterLevel\":{\n  \t\t\"type\":\"Property\",\n  \t\t\"value\":0.0\n  \t},\n  \t\"volume\":{\n  \t\t\"type\":\"Property\",\n  \t\t\"value\":0.0\n  \t},\n  \t\"refIrrigationSystem\":{\n  \t\t\"type\": \"Relationship\",\n  \t\t\"value\":\"\"\n  \t}\n}\n"
						},
						"url": {
							"raw": "localhost:1026/v2/entities/",
							"host": [
								"localhost"
							],
							"port": "1026",
							"path": [
								"v2",
								"entities",
								""
							]
						},
						"description": "This HTTP ruesition creates an Water Meter Virtual Entity (VE) on Orion"
					},
					"response": []
				},
				{
					"name": "Soil Probe",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "Cache-Control",
								"value": " no-cache",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [\n        {\n            \"device_id\": \"Probe111\",\n            \"entity_name\": \"urn:ngsi-ld:Probe:Probe111\",\n            \"entity_type\": \"Probe\",\n            \"attributes\": [\n                {\n                    \"name\": \"temperature\",\n                    \"type\": \"Number\"\n                },\n                {\n                \t\"name\": \"humidity\",\n                    \"type\": \"Number\"\n                },\n                {\n                    \"name\": \"@context\",\n                    \"type\": \"@context\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{swamp_ip}}:4041/iot/devices",
							"host": [
								"{{swamp_ip}}"
							],
							"port": "4041",
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Soil Probe VE",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "swamp-IoT Agent",
			"item": [
				{
					"name": "GET About",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3456/iot/about",
							"host": [
								"localhost"
							],
							"port": "3456",
							"path": [
								"iot",
								"about"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST device",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [\n        {\n            \"device_id\": \"Probe20\",\n            \"entity_name\": \"urn:ngsi-ld:Probe:Probe20\",\n            \"entity_type\": \"Probe\",\n            \"attributes\": [\n                {\n                    \"object_id\": \"S\",\n                    \"name\": \"timestamp\",\n                    \"type\": \"Number\"\n                },\n                {\n                    \"object_id\": \"I\",\n                    \"name\": \"ProbeID\",\n                    \"type\": \"Text\"\n                },\n                {\n                    \"object_id\": \"T1\",\n                    \"name\": \"temperature_soil\",\n                    \"type\": \"Number\"\n                },\n                {\n                    \"object_id\": \"T0\",\n                    \"name\": \"temperature_air\",\n                    \"type\": \"Number\"\n                },\n                {\n                    \"object_id\": \"H1\",\n                    \"name\": \"humidity_soil_cap\",\n                    \"type\": \"Number\"\n                },\n                {\n                    \"object_id\": \"H2\",\n                    \"name\": \"humidity_soil_res\",\n                    \"type\": \"Number\"\n                },\n                {\n                    \"object_id\": \"H3\",\n                    \"name\": \"iluminance_environment\",\n                    \"type\": \"Number\"\n                }\n            ],\n            \"dev_eui\": \"83eb4d5564f18289\",\n            \"application_id\": \"2\",\n            \"broker_address\": \"mosquitto\",\n            \"orion_address\": \"orion\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:3456/iot/devices",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3456",
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IoT Agent Lora",
			"item": [
				{
					"name": "POST Device",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "fiware-service",
								"value": "test",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": [\n    {\n      \"device_id\": \"lora_n_003\",\n      \"entity_name\": \"LORA-N-003\",\n      \"entity_type\": \"LoraDevice\",\n      \"timezone\": \"America/Santiago\",\n      \"attributes\": [\n        {\n          \"object_id\": \"bp0\",\n          \"name\": \"barometric_pressure_0\",\n          \"type\": \"hpa\"\n        },\n        {\n          \"object_id\": \"di3\",\n          \"name\": \"digital_in_3\",\n          \"type\": \"Number\"\n        },\n        {\n          \"object_id\": \"do4\",\n          \"name\": \"digital_out_4\",\n          \"type\": \"Number\"\n        },\n        {\n          \"object_id\": \"rh2\",\n          \"name\": \"relative_humidity_2\",\n          \"type\": \"Number\"\n        },\n        {\n          \"object_id\": \"t1\",\n          \"name\": \"temperature_1\",\n          \"type\": \"Number\"\n        }\n      ],\n      \"internal_attributes\": {\n      \t\"lorawan\": {\n      \t\t\"application_server\":{\n            \t\"host\": \"eu.thethings.network\",\n            \t\"username\": \"ari_ioe_app_demo1\",\n            \t\"password\": \"pwd1\",\n            \t\"provider\": \"TTN\"\n        \t},\n          \"dev_eui\": \"1119343755556A14\",\n          \"app_eui\": \"4569343567897875\",\n          \"application_id\": \"ari_ioe_app_demo1\",\n          \"application_key\": \"444B8EF16415B5F6ED777EAFE695C49\",\n          \"data_model\": \"cayennelpp\"\n        }\n      }\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://localhost:4061/iot/devices",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4061",
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}